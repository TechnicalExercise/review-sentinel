# This is a basic workflow to help you get started with Actions

name: Ensure review policy in new repos

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  repository_dispatch:
    types:
      - repo_created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      repo-name:
        description: 'Name of the newly created repository'
        required: true
        default: 'repo1'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ensure-review:
    name: 'Ensure review process for ${{ github.event.inputs.repo-name }}'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Show the repo name
        run: | 
          echo 'repo name: ${{ github.repository_owner }}/${{ github.event.inputs.repo-name }}'
      
      - name: Get repo
        id: get-repo
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.inputs.repo-name }}
        with:
          route: GET /repos/{owner}/{repo}
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }} 
      
      - name: Show the repo data # should be default_branch
        run: |
          echo 'Default branch: ${{ fromJson(steps.get-repo.outputs.data).default_branch }}'

      - name: Set branch protection
        id: set-protection
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.inputs.repo-name }}
          BRANCH: ${{ fromJson(steps.get-repo.outputs.data).default_branch }}
        with:
          route: PUT /repos/{owner}/{repo}/branches/{branch}/protection
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}       
          branch: ${{ env.BRANCH }}
          required_pull_request_reviews: '{ "require_code_owner_reviews": true, "required_approving_review_count": 1 }'
