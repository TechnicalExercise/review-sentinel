# This is a basic workflow to help you get started with Actions

name: Ensure review policy in new repos

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  repository_dispatch:
    types:
      - repo_created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      repo-name:
        description: 'Name of the newly created repository'
        required: true
      

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ensure-review:
    name: 'Ensure review process for ${{ github.event.inputs.repo-name }}'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Show the repo name
        run: | 
          echo 'repo name: ${{ github.repository_owner }}/${{ github.event.inputs.repo-name }}'

      - name: Get repo
        id: get-repo
        uses: octokit/request-action@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # HTTP Verb + path as shown on https://developer.github.com/v3/
          route: POST /repos/{owner}/{repo}/issues
          owner: devopsjester
          repo: workflow-experiments
          title: Issue Title
          body: TBD
      
#       - name: Get repo
#         id: get-repo
#         uses: octokit/request-action@v2.x
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           route: GET /repos/{owner}/{repo}
#           owner: ${{ github.repository_owner }}
#           repo: ${{ github.event.inputs.repo-name }}
      
      - name: Show the repo data # should be default_branch
        run: |
          echo 'Default branch:'
          echo '${{ fromJson(steps.get-repo.outputs.data) }}'
